stages:
 - complie
 - test
 - filesystem_scan
 - dependency_check
 - sonarscan
 - package
 - trivyscan_deploy 

variables:
  DOCKERHUBUSER: "muralidhar123"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  APP_NAME: "gameoflife"
  TAG: $CI_COMMIT_SHORT_SHA

cache: 
  paths: 
    - .m2/repository
    - target

maven_compile:
  stage: complie
  image: 
    name: maven:ibmjava
  script:
  - mvn compile

maven_test:
  stage: test
  image: 
    name: maven:ibmjava
  script: 
  - mvn test

FS_Scan:
  stage: filesystem_scan
  image: 
    name: aquasec/trivy:latest
    entrypoint: [""]
  before_script: 
  - mkdir -p trivyfilesystem
  script: 
  - trivy fs --cache-dir .trivycache/ . -o trivyfilesystem/tfs-$CI_COMMIT_SHA
  artifacts:
    untracked: false
    when: on_success
    access: all
    expire_in: "3 days"
    paths:
      - .trivycache/

Dependecy-Check:
  stage: dependency_check
  image:
    name: owasp/dependency-check
    entrypoint: [""]
  script:
    - /usr/share/dependency-check/bin/dependency-check.sh --scan .
  artifacts:
    untracked: false
    when: on_success
    expire_in: 3 days
    paths:
      - "/reports/dependency-check"

sonarqube-check:
  stage: sonarscan
  image: maven:3.6.3-jdk-11
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  
    GIT_DEPTH: "0" 
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script: 
    - mvn verify sonar:sonar -Dsonar.projectKey=gameoflife
  allow_failure: true
  only:
    - main

maven_package:
  stage: package
  image: 
    name: maven:ibmjava
  script: 
  - mvn clean package

trivyscan_and_deploy:
  stage: trivyscan_deploy 
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  image: 
    name: docker:stable
  services:
    - name: docker:dind
      entrypoint: ["env", "-u", "DOCKER_HOST"]
      command: ["dockerd-entrypoint.sh"]
  script:
    - docker build -t $APP_NAME .
    - docker tag $APP_NAME $DOCKERHUBUSER/$APP_NAME:$TAG
    - docker pull aquasec/trivy:latest
    - docker run -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy:latest image --cache-dir .trivycache/ --format json -o report.json $DOCKERHUBUSER/$APP_NAME:$TAG
    #- docker run -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy:latest image --format json -o report/report.json $DOCKERHUBUSER/$APP_NAME:$TAG
    - echo "$DOCKERHUB_PASSWORD" | docker login --username $DOCKERHUBUSER --password-stdin
    - docker push $DOCKERHUBUSER/$APP_NAME:$TAG
  artifacts:
    untracked: false
    when: on_success
    access: all
    expire_in: "3 days"
    paths:
      - .trivycache/


